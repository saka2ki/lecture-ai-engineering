name: ML Pipeline CI

on:
  push:
    branches: [ main, master  ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      run_mode:
        description: '実行モード'
        required: false
        default: 'test'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with: 
        fetch-depth: 2
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest great_expectations pandas scikit-learn flake8 black mypy pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        
    - name: Lint with flake8
      run: |
        flake8 day5/演習3 --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 day5/演習3 --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
        
    - name: Format check with black
      run: |
        black --check day5/演習3
        
    - name: Run data tests
      run: |
        pytest day5/演習3/tests/test_data.py -v
        
    - name: Run model tests
      run: |
        pytest day5/演習3/tests/test_model.py -v -s

    - name: 演習2のmain.pyをそのまま実行していますが、宿題の趣旨とは異なりますか?演習３も配布時点で既に精度・推論時間・ベースライン比較・再現性が実装されているので追記箇所ほぼ無いです。
      working-directory: day5/演習2
      run: |
        python main.py -v

    - name: 今の精度を保存
      id: current
      run: output = $(pytest day5/演習3/tests/test_model.py -k test_model_accuracy -v -s | head -n 1)
            echo "output=$output" >> $GITHUB_OUTPUT

    - name: 一つ前のcommitでcheckout
      run: |
        git checkout HEAD~1

    - name: 依存関係を再度インストール
      run: |
        python -m pip install --upgrade pip
        pip install pytest great_expectations pandas scikit-learn flake8 black mypy pytest-cov
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: 一つ前のモデルと比較
      run: |
        current_acc = "${{steps.current.outputs.output}}"
        before_acc = $(pytest day5/演習3/tests/test_model.py -k test_model_accuracy -v -s | head -n 1)
        current_score = $(echo "$current\acc" | grep -oE '[0-9]+(\.[0-9]+)?')
        before_score = $(echo "$before_acc" | grep -oE '[0-9]+(\.[0-9]+)?')
        if (( $(echo "$current_score < $before_score" | bc -l) )); then
            echo "Error: New accuracy is lower"
            exit 1
        fi
